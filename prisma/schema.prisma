generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  firstname  String    @db.VarChar(255)
  lastname   String    @db.VarChar(255)
  created_at DateTime  @default(now())
  updated_at DateTime?
  posts      Post[]
  images     Image[]
  comments   Comment[]
  likes      Like[]
  shares     Share[]

  @@map("users")
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(255)
  content    String    @db.Text
  images     Image[]
  comments   Comment[]
  likes      Like[]
  shares     Share[]
  created_at DateTime  @default(now())
  updated_at DateTime?
  user       User      @relation(fields: [userId], references: [id])
  userId     Int

  @@map("posts")
}

model Image {
  id     Int    @id @default(autoincrement())
  puth   String @db.VarChar(255)
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  @@map("images")
}

model Comment {
  id      Int    @id @default(autoincrement())
  comment String @db.Text
  post    Post   @relation(fields: [postId], references: [id])
  postId  Int
  user    User   @relation(fields: [userId], references: [id])
  userId  Int

  @@map("comments")
}

model Share {
  id     Int  @id @default(autoincrement())
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@map("shares")
}

model Like {
  id     Int  @id @default(autoincrement())
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@map("likes")
}
